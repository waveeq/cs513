[
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "name",
          "columnName": "name",
          "query": "Chicken",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "name",
    "expression": "grel:\"chicken\"",
    "onError": "set-to-blank",
    "newColumnName": "main_ingredient_chicken",
    "columnInsertIndex": 2,
    "description": "Create column main_ingredient_chicken at index 2 based on column name using expression grel:\"chicken\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "name",
          "columnName": "name",
          "query": "Steak",
          "mode": "text",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "name",
    "expression": "grel:\"steak\"",
    "onError": "set-to-blank",
    "newColumnName": "main_ingredient_steak",
    "columnInsertIndex": 2,
    "description": "Create column main_ingredient_steak at index 2 based on column name using expression grel:\"steak\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [
        {
          "type": "text",
          "name": "name",
          "columnName": "name",
          "query": "Clam|Trout|Lobster|Crab|Salmon|Anchovies|Caviar|Oysters|Bass|Sardines|Scallops",
          "mode": "regex",
          "caseSensitive": false,
          "invert": false
        }
      ],
      "mode": "row-based"
    },
    "baseColumnName": "name",
    "expression": "grel:\"seafood\"",
    "onError": "set-to-blank",
    "newColumnName": "main_ingredient_seafood",
    "columnInsertIndex": 2,
    "description": "Create column main_ingredient_seafood at index 2 based on column name using expression grel:\"seafood\""
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "main_ingredient_seafood",
    "expression": "join ([coalesce(cells['main_ingredient_seafood'].value,''),coalesce(cells['main_ingredient_steak'].value,''),coalesce(cells['main_ingredient_chicken'].value,'')],'')",
    "onError": "keep-original",
    "newColumnName": "main_ingredient",
    "columnInsertIndex": 3,
    "description": "Create column main_ingredient at index 3 based on column main_ingredient_seafood using expression join ([coalesce(cells['main_ingredient_seafood'].value,''),coalesce(cells['main_ingredient_steak'].value,''),coalesce(cells['main_ingredient_chicken'].value,'')],'')"
  },
  {
    "op": "core/column-move",
    "columnName": "main_ingredient",
    "index": 2,
    "description": "Move column main_ingredient to position 2"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "main_ingredient",
    "expression": "grel:if(value == \"\", \"Unknown\" , value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column main_ingredient using expression grel:if(value == \"\", \"Unknown\" , value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "main_ingredient",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column main_ingredient using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "menus_appeared",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column menus_appeared using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "times_appeared",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column times_appeared using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "first_appeared",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column first_appeared using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "last_appeared",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column last_appeared using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "lowest_price",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column lowest_price using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "highest_price",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column highest_price using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "times_appeared",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column times_appeared using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "last_appeared",
    "expression": "value.replace(/\\b2/,\"1\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column last_appeared using expression value.replace(/\\b2/,\"1\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "first_appeared",
    "expression": "value.replace(\"\\\\b2\",\"1\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column first_appeared using expression value.replace(\"\\\\b2\",\"1\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "first_appeared",
    "expression": "value.replace(/^((?!(17|18|19|20)[0-9]{2}).)*$/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column first_appeared using expression value.replace(/^((?!(17|18|19|20)[0-9]{2}).)*$/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "last_appeared",
    "expression": "value.replace(/^((?!(17|18|19|20)[0-9]{2}).)*$/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column last_appeared using expression value.replace(/^((?!(17|18|19|20)[0-9]{2}).)*$/,\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "main_ingredient",
    "expression": "value.replace(\"Unknown\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column main_ingredient using expression value.replace(\"Unknown\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.replace(/^Unknown$/,\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.replace(/^Unknown$/,\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "menus_appeared",
    "expression": "value.replace(\"Unknown\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column menus_appeared using expression value.replace(\"Unknown\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "times_appeared",
    "expression": "value.replace(\"Unknown\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column times_appeared using expression value.replace(\"Unknown\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "first_appeared",
    "expression": "value.replace(\"Unknown\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column first_appeared using expression value.replace(\"Unknown\",\" \")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "last_appeared",
    "expression": "value.replace(\"Unknown\",\" \")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column last_appeared using expression value.replace(\"Unknown\",\" \")"
  },
  {
    "op": "core/column-removal",
    "columnName": "description",
    "description": "Remove column description"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.replace(\"\\\"\",\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.replace(\"\\\"\",\"\")"
  }
]
